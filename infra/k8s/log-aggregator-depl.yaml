apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-aggregator-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-aggregator
  template:
    metadata:
      labels:
        app: log-aggregator
    spec:
      containers:
        - name: log-aggregator
          image: travism26/log-aggregator:latest
          ports:
            - containerPort: 8080
          env:
            # Kafka Configuration
            - name: KAFKA_BROKERS
              value: systems-kafka-cluster-kafka-bootstrap:9092
            - name: LOG_AGG_KAFKA_TOPIC
              value: system-metrics
            - name: LOG_AGG_KAFKA_GROUP_ID
              value: log-aggregator-group

            # Database Configuration
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: postgres-secret
            - name: POSTGRES_HOST
              value: postgres-srv
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: logdb
            - name: POSTGRES_USER
              value: postgres
            - name: DB_MAX_OPEN_CONNS
              value: "25"
            - name: DB_MAX_IDLE_CONNS
              value: "5"
            - name: DB_CONN_MAX_LIFETIME
              value: "5"
            - name: DB_BATCH_SIZE
              value: "1000"

            # Cache Configuration
            - name: CACHE_ENABLED
              value: "true"
            - name: CACHE_TTL
              value: "5"
            - name: CACHE_TIME_RANGE_TTL
              value: "2"
            - name: CACHE_CLEANUP_INTERVAL
              value: "1"

            # API Configuration
            - name: LOG_LEVEL
              value: "info"
            - name: RATE_LIMIT_RPS
              value: "100"
            - name: RATE_LIMIT_BURST
              value: "50"
            - name: CORS_ALLOWED_ORIGINS
              value: "http://localhost:3000"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: log-aggregator-srv
spec:
  selector:
    app: log-aggregator
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
