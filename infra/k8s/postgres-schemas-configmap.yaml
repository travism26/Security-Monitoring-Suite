apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-schemas
data:
  # Log Aggregator Schemas
  logs.sql: |
    -- Schema Version: 1.0.0
    -- Created: 2025-01-31
    -- Last Modified: 2025-01-31
    -- Description: Core schema for log aggregation system

    -- Logs table schema
    CREATE TABLE IF NOT EXISTS logs (
        id VARCHAR(36) PRIMARY KEY,
        timestamp TIMESTAMP NOT NULL,
        host VARCHAR(255) NOT NULL,
        message TEXT NOT NULL,
        level VARCHAR(50) NOT NULL,
        metadata JSONB,
        process_count INTEGER,
        total_cpu_percent FLOAT,
        total_memory_usage BIGINT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Process logs table schema
    CREATE TABLE IF NOT EXISTS process_logs (
        id VARCHAR(36) PRIMARY KEY,
        log_id VARCHAR(36) REFERENCES logs(id),
        name VARCHAR(255) NOT NULL,
        pid INTEGER NOT NULL,
        cpu_percent FLOAT,
        memory_usage BIGINT,
        status VARCHAR(50),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Performance indexes
    CREATE INDEX IF NOT EXISTS idx_logs_timestamp ON logs(timestamp);
    CREATE INDEX IF NOT EXISTS idx_logs_host ON logs(host);
    CREATE INDEX IF NOT EXISTS idx_process_logs_log_id ON process_logs(log_id);
    CREATE INDEX IF NOT EXISTS idx_process_logs_name ON process_logs(name);

  alerts.sql: |
    -- Schema Version: 1.0.0
    -- Created: 2025-01-31
    -- Last Modified: 2025-01-31
    -- Description: Alert management schema for log aggregation system

    -- Alerts table schema
    CREATE TABLE IF NOT EXISTS alerts (
        id VARCHAR(36) PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        description TEXT NOT NULL,
        severity VARCHAR(20) NOT NULL,
        status VARCHAR(20) NOT NULL,
        source VARCHAR(255) NOT NULL,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL,
        resolved_at TIMESTAMP
    );

    -- Alert logs relationship table
    CREATE TABLE IF NOT EXISTS alert_logs (
        alert_id VARCHAR(36) NOT NULL,
        log_id VARCHAR(36) NOT NULL,
        PRIMARY KEY (alert_id, log_id),
        FOREIGN KEY (alert_id) REFERENCES alerts(id) ON DELETE CASCADE,
        FOREIGN KEY (log_id) REFERENCES logs(id) ON DELETE CASCADE
    );

    -- Alert metadata table
    CREATE TABLE IF NOT EXISTS alert_metadata (
        alert_id VARCHAR(36) NOT NULL,
        key VARCHAR(255) NOT NULL,
        value TEXT NOT NULL,
        PRIMARY KEY (alert_id, key),
        FOREIGN KEY (alert_id) REFERENCES alerts(id) ON DELETE CASCADE
    );

    -- Performance indexes
    CREATE INDEX IF NOT EXISTS idx_alerts_status ON alerts(status);
    CREATE INDEX IF NOT EXISTS idx_alerts_severity ON alerts(severity);
    CREATE INDEX IF NOT EXISTS idx_alerts_created_at ON alerts(created_at);
    CREATE INDEX IF NOT EXISTS idx_alerts_source ON alerts(source);
